<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.samples.petclinic.visits</groupId>
	<artifactId>spring-petclinic-visits-service</artifactId>
	<packaging>jar</packaging>
	<description>Spring PetClinic Visits Service</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RC1</version>
	</parent>

	<properties>
		<java.version>11</java.version>
		<assertj.version>3.11.1</assertj.version>

		<spring-boot.version>2.3.0.RC1</spring-boot.version>
		<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
		<wavefront.version>2.0.0-RC1</wavefront.version>

		<maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>

		<docker.image.prefix>odedia</docker.image.prefix>
		<docker.image.exposed.port>9090</docker.image.exposed.port>
		<docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
		<docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
		<docker.plugin.version>1.2.0</docker.plugin.version>
		<brave.version>5.11.2</brave.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>3.1.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>io.zipkin.brave</groupId>
				<artifactId>brave-bom</artifactId>
				<version>${brave.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.wavefront</groupId>
				<artifactId>wavefront-spring-boot-bom</artifactId>
				<version>${wavefront.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<profiles>

		<profile>
			<id>springboot</id>
			<activation>
				<file>
					<!-- Just a way to identify a Spring Boot application -->
					<exists>src/main/resources/bootstrap.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<fork>true</fork>
						</configuration>
						<executions>
							<execution>
								<!-- Spring Boot Actuator displays build-related information if a 
									META-INF/build-info.properties file is present -->
								<goals>
									<goal>build-info</goal>
								</goals>
								<configuration>
									<additionalProperties>
										<encoding.source>${project.build.sourceEncoding}</encoding.source>
										<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
										<java.source>${maven.compiler.source}</java.source>
										<java.target>${maven.compiler.target}</java.target>
									</additionalProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties 
						file is present -->
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
							<generateGitPropertiesFile>true</generateGitPropertiesFile>
							<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
							</generateGitPropertiesFilename>
							<failOnNoGitDirectory>false</failOnNoGitDirectory>
						</configuration>
					</plugin>
				</plugins>
			</build>

		</profile>

		<profile>
			<id>buildDocker</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker.plugin.version}</version>
							<executions>
								<execution>
									<phase>install</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
								<dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
								<serverId>docker-hub</serverId>
								<registryUrl>https://index.docker.io/v1/</registryUrl>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.build.finalName}.jar</include>
									</resource>
								</resources>
								<buildArgs>
									<ARTIFACT_NAME>${project.build.finalName}</ARTIFACT_NAME>
									<EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
									<DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
								</buildArgs>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>com.wavefront</groupId>
			<artifactId>wavefront-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Spring Cloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<!-- Spring Cloud Services -->
		<dependency>
			<groupId>io.pivotal.spring.cloud</groupId>
			<artifactId>spring-cloud-services-starter-config-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.pivotal.spring.cloud</groupId>
			<artifactId>spring-cloud-services-starter-service-registry</artifactId>
		</dependency>

		<!-- Third parties -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.zipkin.brave</groupId>
			<artifactId>brave-instrumentation-mysql</artifactId>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
